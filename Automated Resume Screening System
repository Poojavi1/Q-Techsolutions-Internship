#before going into code install neccessary packages and libraries
#this is the main code
from flask import Flask, request, render_template
import spacy
import chardet

app = Flask(__name__)

# Load the spaCy model
nlp = spacy.load('en_core_web_sm')

def read_file(file):
    raw_data = file.read()
    result = chardet.detect(raw_data)
    encoding = result['encoding']
    if encoding is None:
        encoding = 'utf-8'
    file.seek(0)
    return raw_data.decode(encoding, errors='ignore')

def preprocess_text(text):
    doc = nlp(text)
    tokens = [token.lemma_ for token in doc if not token.is_stop and not token.is_punct]
    return ' '.join(tokens)

def rank_candidates(resume_texts, job_description):
    job_doc = nlp(job_description)
    similarities = []
    for resume_text in resume_texts:
        resume_doc = nlp(resume_text)
        similarity = resume_doc.similarity(job_doc)
        similarities.append(similarity)
    return similarities

def get_fit_category(score):
    if score >= 0.7:
        return "High Fit"
    elif score >= 0.4:
        return "Medium Fit"
    else:
        return "Low Fit"

@app.route('/')
def index():
    return render_template('index.html')

@app.route('/upload', methods=['POST'])
def upload():
    job_description = request.form['job_description']
    resume_files = request.files.getlist('resumes')
    
    # Read and preprocess resumes
    resume_texts = [preprocess_text(read_file(file)) for file in resume_files]
    job_description = preprocess_text(job_description)
    
    similarities = rank_candidates(resume_texts, job_description)
    
    # Pair resumes with their similarity scores and categories
    results = sorted(zip(resume_files, similarities), key=lambda x: x[1], reverse=True)
    categorized_results = [(file, score, get_fit_category(score)) for file, score in results]
    
    return render_template('results.html', results=categorized_results)

if __name__ == '__main__':
    app.run(debug=True)
#this is html code resume screening
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Resume Screening</title>
</head>
<body>
    <h1>Upload Resumes and Job Description</h1>
    <form action="/upload" method="post" enctype="multipart/form-data">
        <label for="job_description">Job Description:</label><br>
        <textarea id="job_description" name="job_description" rows="10" cols="50"></textarea><br><br>
        <label for="resumes">Upload Resumes:</label><br>
        <input type="file" id="resumes" name="resumes" multiple><br><br>
        <input type="submit" value="Submit">
    </form>
</body>
</html>
#this is html code for results for fit
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Results</title>
</head>
<body>
    <h1>Results</h1>
    <ul>
        {% for file, similarity, category in results %}
            <li>
                <strong>{{ file.filename }}</strong> - Similarity Score: {{ similarity }} - Fit Category: {{ category }}
            </li>
        {% endfor %}
    </ul>
    <a href="/">Upload More</a>
</body>
</html>
#after this upload a resume and give a job description 
