#this is the main code to execute
from flask import Flask, render_template, request, redirect, url_for
from flask_sqlalchemy import SQLAlchemy
from flask_security import Security, SQLAlchemyUserDatastore, login_required, current_user
from models import db, User, Role, BlogPost, PostVersion
from config import Config

app = Flask(__name__)
app.config.from_object(Config)

# Initialize extensions
db.init_app(app)
user_datastore = SQLAlchemyUserDatastore(db, User, Role)
security = Security(app, user_datastore)

@app.route('/')
def home():
    posts = BlogPost.query.all()
    return render_template('home.html', posts=posts)

@app.route('/new_post', methods=['GET', 'POST'])
@login_required
def new_post():
    if request.method == 'POST':
        title = request.form['title']
        content = request.form['content']
        post = BlogPost(title=title, content=content, author_id=current_user.id)
        db.session.add(post)
        db.session.commit()
        return redirect(url_for('view_post', post_id=post.id))
    return render_template('new_post.html')

@app.route('/post_edit/<int:post_id>', methods=['GET', 'POST'])
@login_required
def post_edit(post_id):
    post = BlogPost.query.get_or_404(post_id)
    if post.author_id != current_user.id:
        return redirect(url_for('home'))  # Prevent unauthorized editing
    if request.method == 'POST':
        post.title = request.form['title']
        post.content = request.form['content']
        db.session.commit()
        return redirect(url_for('view_post', post_id=post.id))
    return render_template('post_edit.html', post=post)

@app.route('/view_post/<int:post_id>')
def view_post(post_id):
    post = BlogPost.query.get_or_404(post_id)
    return render_template('view_post.html', post=post)

@app.route('/delete_post/<int:post_id>')
@login_required
def delete_post(post_id):
    post = BlogPost.query.get_or_404(post_id)
    if post.author_id != current_user.id:
        return redirect(url_for('home'))  # Prevent unauthorized deletion
    db.session.delete(post)
    db.session.commit()
    return redirect(url_for('home'))

@app.route('/register', methods=['GET', 'POST'])
def register():
    if request.method == 'POST':
        username = request.form['username']
        email = request.form['email']
        password = request.form['password']
        user = user_datastore.create_user(username=username, email=email, password=user_datastore.hash_password(password))
        db.session.commit()
        return redirect(url_for('login'))
    return render_template('register.html')

@app.route('/login', methods=['GET', 'POST'])
def login():
    return render_template('login.html')

@app.route('/logout')
@login_required
def logout():
    return redirect(url_for('home'))

if __name__ == '__main__':
    with app.app_context():
        db.create_all()  # Create tables before starting the app
    app.run(debug=True)
#this is the models.py for models
from flask_sqlalchemy import SQLAlchemy
from flask_security import UserMixin, RoleMixin
import uuid

db = SQLAlchemy()

# Many-to-many relationship between users and roles
roles_users = db.Table(
    'roles_users',
    db.Column('user_id', db.Integer(), db.ForeignKey('user.id')),
    db.Column('role_id', db.Integer(), db.ForeignKey('role.id'))
)

class Role(db.Model, RoleMixin):
    id = db.Column(db.Integer(), primary_key=True)
    name = db.Column(db.String(80), unique=True)

class User(db.Model, UserMixin):
    id = db.Column(db.Integer, primary_key=True)
    username = db.Column(db.String(255), unique=True)
    email = db.Column(db.String(255), unique=True)
    password = db.Column(db.String(255))
    active = db.Column(db.Boolean())
    fs_uniquifier = db.Column(db.String(255), unique=True, nullable=False, default=lambda: str(uuid.uuid4()))
    roles = db.relationship('Role', secondary=roles_users, backref=db.backref('users', lazy='dynamic'))

class BlogPost(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    title = db.Column(db.String(255), nullable=False)
    content = db.Column(db.Text, nullable=False)
    author_id = db.Column(db.Integer, db.ForeignKey('user.id'))
    author = db.relationship('User', backref=db.backref('posts', lazy=True))
    created_at = db.Column(db.DateTime, default=db.func.current_timestamp())
    updated_at = db.Column(db.DateTime, default=db.func.current_timestamp(), onupdate=db.func.current_timestamp())

class PostVersion(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    blogpost_id = db.Column(db.Integer, db.ForeignKey('blog_post.id'))
    version_number = db.Column(db.Integer, nullable=False)
    title = db.Column(db.String(255), nullable=False)
    content = db.Column(db.Text, nullable=False)
    created_at = db.Column(db.DateTime, default=db.func.current_timestamp())
    blogpost = db.relationship('BlogPost', backref=db.backref('versions', lazy=True))

    def __init__(self, blogpost, version_number, title, content):
        self.blogpost = blogpost
        self.version_number = version_number
        self.title = title
        self.content = content
#this is for configuration
class Config:
    SECRET_KEY = 'supersecretkey'
    SQLALCHEMY_DATABASE_URI = 'sqlite:///multi_user_blog.db'
    SQLALCHEMY_TRACK_MODIFICATIONS = False
    SECURITY_PASSWORD_SALT = 'some_random_salt'
    SECURITY_REGISTERABLE = True
    SECURITY_SEND_REGISTER_EMAIL = False
    SECURITY_PASSWORD_HASH = 'bcrypt'
#this is the form.py
from flask_wtf import FlaskForm
from wtforms import StringField, TextAreaField, SubmitField
from wtforms.validators import DataRequired

class PostForm(FlaskForm):
    title = StringField('Title', validators=[DataRequired()])
    content = TextAreaField('Content', validators=[DataRequired()])
    submit = SubmitField('Submit')
#this is the home.html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Multi-User Blog</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f0f8ff;
            color: #333;
        }
        h1 {
            color: #4682b4;
        }
        .post-list {
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }
        .post-item {
            margin-bottom: 20px;
        }
        .post-item h2 {
            font-size: 1.5em;
            margin-bottom: 5px;
        }
        .post-item a {
            color: #4682b4;
            text-decoration: none;
        }
        .post-item a:hover {
            text-decoration: underline;
        }
        .delete-button {
            color: #ff6347;
            text-decoration: none;
            font-weight: bold;
        }
        .delete-button:hover {
            text-decoration: underline;
        }
    </style>
</head>
<body>
    <h1>Welcome to the Multi-User Blog</h1>
    <a href="/new_post">Create a new post</a>
    <div class="post-list">
        {% for post in posts %}
        <div class="post-item">
            <h2><a href="/view_post/{{ post.id }}">{{ post.title }}</a></h2>
            <a href="/post_edit/{{ post.id }}">Edit</a> | 
            <a href="/delete_post/{{ post.id }}" class="delete-button" onclick="return confirm('Are you sure you want to delete this post?');">Delete</a>
        </div>
        {% endfor %}
    </div>
</body>
</html>
#this is the for new post
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Multi-User Blog</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f0f8ff;
            color: #333;
        }
        h1 {
            color: #4682b4;
        }
        .post-list {
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }
        .post-item {
            margin-bottom: 20px;
        }
        .post-item h2 {
            font-size: 1.5em;
            margin-bottom: 5px;
        }
        .post-item a {
            color: #4682b4;
            text-decoration: none;
        }
        .post-item a:hover {
            text-decoration: underline;
        }
        .delete-button {
            color: #ff6347;
            text-decoration: none;
            font-weight: bold;
        }
        .delete-button:hover {
            text-decoration: underline;
        }
    </style>
</head>
<body>
    <h1>Welcome to the Multi-User Blog</h1>
    <a href="/new_post">Create a new post</a>
    <div class="post-list">
        {% for post in posts %}
        <div class="post-item">
            <h2><a href="/view_post/{{ post.id }}">{{ post.title }}</a></h2>
            <a href="/post_edit/{{ post.id }}">Edit</a> | 
            <a href="/delete_post/{{ post.id }}" class="delete-button" onclick="return confirm('Are you sure you want to delete this post?');">Delete</a>
        </div>
        {% endfor %}
    </div>
</body>
</html>
#this is for post edit
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edit Post</title>
    <style>
        body {
            font-family: Arial, sans-serif;
        }
        form {
            max-width: 600px;
            margin: auto;
            padding: 20px;
            border: 1px solid #ddd;
            border-radius: 8px;
            background-color: #f9f9f9;
        }
        label {
            display: block;
            margin-bottom: 8px;
        }
        input, textarea {
            width: 100%;
            padding: 8px;
            margin-bottom: 12px;
            border: 1px solid #ccc;
            border-radius: 4px;
        }
        button {
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            background-color: #007BFF;
            color: white;
            cursor: pointer;
        }
        button:hover {
            background-color: #0056b3;
        }
    </style>
</head>
<body>
    <h1>Edit Blog Post</h1>
    <form method="POST" action="/post_edit/{{ post.id }}">
        <label for="title">Title:</label>
        <input type="text" name="title" id="title" value="{{ post.title }}" required>
        <br>
        <label for="content">Content:</label>
        <textarea name="content" id="content" rows="10" required>{{ post.content }}</textarea>
        <br>
        <button type="submit">Save</button>
    </form>
</body>
</html>
#this is for viewing post
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>View Post</title>
</head>
<body>
    <h1>{{ post.title }}</h1>
    <p>{{ post.content }}</p>
    <p><strong>Author:</strong> {{ post.author.username }}</p>
    <p><a href="/post_edit/{{ post.id }}">Edit Post</a> | <a href="/delete_post/{{ post.id }}" onclick="return confirm('Are you sure you want to delete this post?');">Delete Post</a></p>
    <a href="/">Back to Home</a>
</body>
</html>
#this is for registering
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Register</title>
</head>
<body>
    <h1>Register</h1>
    <form method="POST" action="/register">
        <label for="username">Username:</label>
        <input type="text" name="username" id="username" required>
        <br>
        <label for="email">Email:</label>
        <input type="email" name="email" id="email" required>
        <br>
        <label for="password">Password:</label>
        <input type="password" name="password" id="password" required>
        <br>
        <button type="submit">Register</button>
    </form>
    <a href="/login">Login</a>
</body>
</html>
#this is for login
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login</title>
</head>
<body>
    <h1>Login</h1>
    <form method="POST" action="/login">
        <label for="email">Email:</label>
        <input type="email" name="email" id="email" required>
        <br>
        <label for="password">Password:</label>
        <input type="password" name="password" id="password" required>
        <br>
        <button type="submit">Login</button>
    </form>
    <a href="/register">Register</a>
</body>
</html>

